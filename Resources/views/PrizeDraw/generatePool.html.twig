{% extends 'LiveVotingBundle::baseAdmin.html.twig' %}

{% block title %}PrizeDraw|PrizePool|LiveVoting{% endblock %}
{% block mainHeading %}Prize Draw{% endblock %}
{% block stylesheets %}
	<link rel="stylesheet" href="{{ asset ('bundles/livevoting/css/odometer-theme-plaza.css') }}">
{% endblock %}
{% block body %}
    <div class="row">
		<div id="container" class="col-xs-12 margin-top">
			<div class="prize-pool">
                <h1><i id="lottery-diamond" class="fa fa-5x fa-diamond"></i></h1>
                <ul id="lista-pobjednika" class="list-group lottery">
                    {#{% for voteEmail in votePool %}#}
                        {#<li>{{ voteEmail }}</li>#}
                    {#{% endfor %}#}
                    <li>marin.petrunic@gmail.com</li>
                    <li>marin.petrunic@gmail.com</li>
                    <li>marin.pet@gmail.com</li>
                </ul>
	        </div>
        </div>
    </div>

    <div class="row secondary-footer">
        <div class="col-xs-12">
            <a href="{{ path('admin_prize_draw') }}"><button type="button" class="btn">Back</button></a>
            <button class="btn resetButton">Reset</button>
            <button id="start" class="btn start-lottery">Draw</button>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
	<script type="text/javascript">
        jQuery(function() {
            $.lottery = function(element, options) {
                var state,
                _this = this;
                state = '';
                this.timerHandle;
                this.mainDiv = $("<div class='lottery-plugin' />");
                this.previousIndex = -1;
                this.settings = {};
                this.items = {};
                this.$element = $(element);
                this.setState = function(_state) {
                    return state = _state;
                };
                this.getState = function() {
                    return state;
                };
                this.getSetting = function(key) {
                    return this.settings[key];
                };
                this.callSettingFunction = function(name, args) {
                    if (args == null) {
                        args = [];
                    }
                    return this.settings[name].apply(this, args);
                };
                this.mixNames = function(interval) {
                    var _this = this;
                    if (this.timerHandle) {
                        return console.log("Timer already running");
                    } else {
                        return this.timerHandle = window.setInterval(function() {
                            var randomIndex;
                            _this.mainDiv.empty().fadeOut(390);
                            if (_this.previousIndex >= 0) {
                                randomIndex = _this.previousIndex;
                                while (randomIndex === _this.previousIndex) {
                                    randomIndex = Math.floor(Math.random() * _this.listItems.length);
                                }
                            } else {
                                randomIndex = Math.floor(Math.random() * _this.listItems.length);
                            }
                            _this.mainDiv.append($("<h2 class='lottery-option bigger' >" + _this.listItems[randomIndex] + "</h2>")).fadeIn(0);
                            _this.previousIndex = randomIndex;
                            return console.log(randomIndex);
                        }, 400);
                    }
                };
                this.stopLottery = function() {
                    console.log("Stop");
                    if (typeof console.log === "function") {
                        console.log("Ended");
                    }
                    window.clearInterval(this.timerHandle);
                    var lottery_option = $('h2.lottery-option');
                    var winner = lottery_option.text();
                    lottery_option.text("Lucky winner is: "+winner);
                    $('#lottery-diamond').removeClass("fa-spin");
                    $('#lottery-diamond').css("color", "#ffffff");
                    $('#lottery-diamond').css("filter", "drop-shadow(0 0 5px #fff)");
                    $('#lottery-diamond').css("-webkit-filter", "drop-shadow(0 0 5px #fff)");
                    return lottery_option.css("color", "#ffffff");
                };
                this.startLottery = function() {
                    var _this = this;
                    $('.prize-pool').push("<div class='lottery'></div>");
                    _this.$element = $('.lottery');
                    this.$element.replaceWith(this.mainDiv);
                    this.mixNames();
                    $('#lottery-diamond').addClass("fa-spin");
                    return window.setTimeout(function() {
                        return _this.stopLottery();
                    }, 5000);
                };
                this.startButtonPressed = function() {
                    return _this.startLottery();
                };

                this.resetButtonPressed = function() {
                    $('h2.lottery-option').remove();
                    $('.prize-pool').push("<div class='lottery'></div>");
                    $('#lottery-diamond').removeAttr("style");
                    _this.$element = $('.lottery');
                    return _this.timerHandle = undefined;
                };

                this.setupListeners = function() {
                    $("button.resetButton").bind('click', this.resetButtonPressed);
                    return $("button.start-lottery").bind('click', this.startButtonPressed);
                };
                this.init = function() {
                    console.log("Init");
                    var _this = this;
                    this.settings = $.extend({}, this.defaults, options);
                    this.setState('ready');
                    this.listItems = [];
                    $(this.$element).find("li").each(function(index, elem) {
                        return _this.listItems.push($(elem).text());
                    });
                    this.$element.html($(""));
                    return this.setupListeners();
                };
                this.init();
                return this;
            };
            return $.lottery.prototype.defaults = $.fn.lottery = function(options) {
                return this.each(function() {
                    var plugin;
                    if ($(this).data('lottery') === void 0) {
                        plugin = new $.lottery(this, options);
                        return $(this).data('lottery', plugin);
                    }
                });
            };
        });
    </script>
    <script type="text/javascript">
        var lottery;
        $( function() {
            lottery = $( '.lottery' ).lottery();
        } );
    </script>
{% endblock %}
