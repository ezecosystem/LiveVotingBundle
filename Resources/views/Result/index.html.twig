{% extends 'LiveVotingBundle::baseAdmin.html.twig' %}

{% block title %}FinalResult|Event|LiveVoting{% endblock %}

{% block mainHeading %}Final results: {{event_name}}{% endblock %}

{% block stylesheets %}
  <link rel="stylesheet" href= "{{ asset('bundles/livevoting/css/normalize.css') }}"  />
{% endblock %}

{% block body %}
    <div class="row">
      <div class="col-xs-12">
        <div id="high"></div>
      </div>
    </div>

    <div class="row">
      <div class="col-xs-12">
          <div id="winner">
              <h1>And the winner is:</h1>
              <h2 class="winner"></h2>
          </div>
      </div>
    </div>

    <div class="row secondary-footer">
      <div class="col-xs-12">
        <a href="{{path('admin_event')}}"><button type="button" class="btn">Back</button></a>
      </div>
    </div>
{% endblock %}

{% block javascripts %}
    {#<script src="http://code.highcharts.com/highcharts.js"></script>#}
    <script src="{{ asset('bundles/livevoting/js/highcharts.js') }}"></script>

  <script type="text/javascript">
      var requestData, animation_data, chart, data;
      var callMe = function(){
          setTimeout(setPresentationData, 1000);
      };

      requestData = function(index){
          if(index>=animation_data.length){
              endEverything();
              return;
          }
          var data = [];
          var avg;
          for(var i in animation_data[index]){
              avg = parseFloat(animation_data[index][i]['average']);
              data.push(avg);
          }

          chart.series[0].setData(data);
          setTimeout(function(){requestData(index+1)}, 1000);

      }

      function endEverything(){
          $('#winner .winner').html(data['winner']['presenter']['name']+' '+data['winner']['presenter']['surname']);
          setTimeout(function(){
              $('#winner').fadeIn(2000,
                  function(){
                      $("body").scrollTop($("#winner").offset().top - 200);
                      setTimeout(function(){
                         $('#winner .winner').fadeIn(1000);
                      },100);
                  }
              );

          },1000);
      }

      function setPresentationData(){
          if(!animation_data.length)return;
          var data = [];
          var categories = [];
          for(var ii in animation_data[0]){
              categories.push(animation_data[0][ii]['presenter']['name']+' '+animation_data[0][ii]['presenter']['surname']);
              data.push(0);
          }
          chart.xAxis[0].update({categories: categories}, true);
          chart.series[0].setData(data);
          setTimeout(function(){requestData(0)}, 1000);
      }


      (function(){

          data = jQuery.parseJSON('{{ animation_data|raw }}');
          animation_data = data['animation_data'];
          $('#winner').hide();
          $('#winner .winner').hide();

          var presentationIndex = {};
          chart = new Highcharts.Chart({
              chart: {
                  renderTo: 'high',
                  type: 'column',
                  events: {
                      load: function(){
                          setTimeout(setPresentationData, 1000);
                      }
                  },
                  height: 480,
                  spacingTop: 32,
                  marginTop: 96,
                  style: {
                    fontFamily: '"ronnia", sans-serif',
                  }
              },
              plotOptions: {
                  column:{
                      colorByPoint: true
                  }
              },
              credits: {
                  enabled: false,
                  text: 'NetGen',
                  href: 'http://netgenlabs.com'
              },
              colors: ["#E6008A"],
              title: {
                  text: 'Results for {{ event_name }}',
                  style: {
                    "color" : "#404041",
                    "font-weight" : "600",
                    "font-size" : "2em"
                  }
              },
              tooltip: {
                enabled: false
              },
              xAxis: {
                  type: 'String',
                  tickPixelInterval: 5,
                  // lineColor: "#ffffff",
                  lineColor: "#ddd",
                  lineWidth: 1,
                  tickColor: "#ffffff",
                  labels: {
                    padding: 16,
                    style: {
                      "color" : "#404041",
                      "font-size" : "14px",
                      "font-weight" : "400",
                    }
                  }
              },
              yAxis: {
                  minPadding: 0.1,
                  maxPadding: 0.1,
                  tickmarkPlacement: 'on',
                  showFirstLabel: false, 
                  min: 0,
                  max: 5,
                  title: {
                      text: 'Average number of rating score',
                      enabled: false
                  },
                  labels: {
                    enabled: false,
                    style: {
                      "color" : "#404041",
                      "font-size" : "18px",
                      "font-weight" : "600"
                    }
                  },
                  gridLineColor: "#ddd"
              },
              series: [
                  {
                      showInLegend: false,
                      data:[],
                      dataLabels: {
                          enabled: true,
                          rotation: 0,
                          formatter: function() {
                              return this.y;
                          },
                          inside: true,
                          shadow: false,
                          color: "#ffffff",
                          style: {
                              fontSize: '20px'
                          }
                      }
                  }]
          });
      })();
  </script>
{% endblock %}
